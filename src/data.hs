data Maybe a = Just a | Nothing
data Person = Person String String deriving Show
data Gender = Male | Female | Unknown deriving Show
data Customer = Customer { firstName :: String
                     , lastName :: String
                     , age :: Int
                     , phoneNumber :: String } deriving (Show)

getFirstName (Person a _)  = a

getLastName (Person  _ b)  = b


main = do
let a = "balaji"
let person = Person "Balaji" "Seshadri"
let sex =  Male
let customer = Customer { firstName = "Radha", lastName = "Mohanoor Sampath", age = 28 , phoneNumber= "303-386-4447"}
print a
print person
-- If you use record syntax accessor methods are generated by Haskell.s
print $ firstName customer
print $ getLastName(person)

print sex
print customer